tracepoint:io_uring:io_uring_create {
    printf("Tracing new uring %d\n", pid);
    @traced[pid] = 1;
}

tracepoint:io_uring:* /@traced[pid]/ { printf("%s\n", probe); }

tracepoint:io_uring:io_uring_task_add /@traced[pid]/ {
    printf("%d adds new task: %p\n", tid, args->ctx);
}

kretprobe:create_io_thread / @traced[pid] / {
    $task = (struct task_struct *) retval;
    printf("%s: %d:%d create_io_thread: %d\n", comm, pid, tid, $task->pid);
    @traced[$task->pid] = 1;
}

kprobe:vfs* / @traced[pid] / {
    printf("%s: %s\n", comm, probe);
}

kprobe:vfs_open / @traced[pid] / {
    printf("%s: open(%s)\n", comm, str(((struct path *)arg0)->dentry->d_name.name));
}

kprobe:__fsnotify_parent / @traced[pid] / {
    $dentry = (struct dentry *) arg0;
    printf("%s: __fsnotify_parent(%s)\n", comm, str($dentry->d_name.name));
}
