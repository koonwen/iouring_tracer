(executable
 (public_name trace_uring)
 (name trace_uring)
 (libraries driver bindings fxt)
 (modules trace_uring ring_writer))

; To be deleted
(executable
 (name test_skel)
 (libraries driver bindings fxt)
 ; (foreign_stubs
 ;  (language c)
 ;  (names skel_stubs))
 (modules test_skel))

(library
 (name driver)
 (libraries ocaml_libbpf bindings fxt eio_linux)
 (foreign_stubs
  (language c)
  (names skel_stubs))
 (modules driver))

(rule
 (mode
  (promote (until-clean)))
 (deps
  (source_tree %{project_root}/bpf))
 (targets uring.bpf.o uring.skel.h)
 (action
  (no-infer
   (progn
    (chdir
     %{project_root}/bpf
     (run make))
    (copy %{project_root}/bpf/output/uring.bpf.o uring.bpf.o)
    (copy %{project_root}/bpf/output/uring.skel.h uring.skel.h)))))

; Try building bpf code with dune?
; (rule
;  (alias bpf)
;  (target trace_uring.bpf.o)
;  (deps trace_uring.bpf.c definitions/defs.h vmlinux.h)
;  (action
;   (run
;    clang
;    -g
;    -O2
;    -target
;    bpf
;    -I
;    definitions
;    -c
;    trace_uring.bpf.c
;    -o
;    %{target})))
